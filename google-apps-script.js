/**
 * Google Apps Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ RUKA
 * ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ CORS ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 */

// ‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á Google Sheet ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
const SPREADSHEET_ID = "YOUR_GOOGLE_SHEET_ID_HERE";

function doPost(e) {
  try {
    console.log("Received POST request:", e);
    
    // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å request
    let data;
    
    if (e.postData) {
      const contentType = e.postData.type || "";
      console.log("Content type:", contentType);
      
      if (contentType.includes("application/json")) {
        // JSON data
        data = JSON.parse(e.postData.contents);
      } else if (contentType.includes("application/x-www-form-urlencoded")) {
        // Form data - ‡∏•‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á JSON ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ form data
        try {
          data = JSON.parse(e.postData.contents);
        } catch (jsonError) {
          // ‡∏ñ‡πâ‡∏≤‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏ä‡πâ parameter ‡πÅ‡∏ó‡∏ô
          data = e.parameter;
        }
      } else {
        // Default to parameter
        data = e.parameter;
      }
    } else {
      data = e.parameter;
    }
    
    console.log("Parsed data:", data);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    if (!data.name || !data.email || !data.phone) {
      throw new Error("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠ ‡∏≠‡∏µ‡πÄ‡∏°‡∏• ‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå");
    }

    // ‡πÄ‡∏õ‡∏¥‡∏î Google Sheet
    const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getActiveSheet();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ header row ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (sheet.getLastRow() === 0) {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á header row
      const headers = [
        "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà/‡πÄ‡∏ß‡∏•‡∏≤",
        "‡∏ä‡∏∑‡πà‡∏≠",
        "‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•", 
        "‡∏≠‡∏µ‡πÄ‡∏°‡∏•",
        "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå",
        "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó/‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£",
        "‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó",
        "TAX ID",
        "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó",
        "‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        "‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",
        "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
        "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
      ];
      sheet.appendRow(headers);
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô sheet
    const timestamp = data.timestamp || new Date().toLocaleString("th-TH", {
      timeZone: "Asia/Bangkok",
      year: "numeric",
      month: "2-digit", 
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
    });

    const rowData = [
      timestamp,
      data.name || "",
      data.surname || "",
      data.email || "",
      data.phone || "",
      data.company || "",
      data.hasCompany || "",
      data.taxId || "",
      data.address || "",
      data.categoryName || "",
      data.categoryIcon || "",
      data.productName || "",
      data.productPrice || "",
      data.quantity || "",
      data.message || "",
    ];

    sheet.appendRow(rowData);

    console.log("Data saved successfully:", rowData);

    // ‡∏™‡πà‡∏á response ‡∏Å‡∏•‡∏±‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏° CORS headers
    const response = {
      success: true,
      message: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
      timestamp: timestamp,
    };

    const output = ContentService.createTextOutput(JSON.stringify(response));
    output.setMimeType(ContentService.MimeType.JSON);
    return output;

  } catch (error) {
    console.error("Error:", error);

    const errorResponse = {
      success: false,
      error: error.toString(),
      message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    };

    const errorOutput = ContentService.createTextOutput(JSON.stringify(errorResponse));
    errorOutput.setMimeType(ContentService.MimeType.JSON);
    return errorOutput;
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö handle OPTIONS request (CORS preflight)
function doOptions(e) {
  console.log("Received OPTIONS request for CORS preflight");
  
  const optionsOutput = ContentService.createTextOutput("");
  return optionsOutput;
}

function doGet(e) {
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Web App ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const testResponse = {
    status: "OK",
    message: "RUKA Contact Form API is working!",
    timestamp: new Date().toISOString(),
    version: "2.0",
  };

  const getOutput = ContentService.createTextOutput(JSON.stringify(testResponse));
  getOutput.setMimeType(ContentService.MimeType.JSON);
  return getOutput;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
function testGoogleSheets() {
  try {
    const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getActiveSheet();
    const testData = [
      new Date().toLocaleString("th-TH"),
      "Test",
      "User", 
      "test@example.com",
      "0000000000",
      "Test Company",
      "‡∏°‡∏µ",
      "1234567890123",
      "Test Address",
      "Test Category",
      "üîß",
      "Test Product",
      "1,000 ‡∏ö‡∏≤‡∏ó",
      "1",
      "This is a test message",
    ];
    
    sheet.appendRow(testData);
    console.log("Test data added successfully");
    return "SUCCESS: Test data added to sheet";
  } catch (error) {
    console.error("Test failed:", error);
    return "ERROR: " + error.toString();
  }
} 